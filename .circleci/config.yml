version: 2
jobs:
  build:
    docker:
      - image: docker:18.01.0-ce-git
    working_directory: /tmp/src/xnat_downloader
    steps:
      - run:
          name: Install pigz and python3
          command: |
            apk add --no-cache pigz python3
      - restore_cache:
          keys:
            - docker-v2-{{ .Branch }}-{{ epoch }}
            - docker-v2-{{ .Branch }}-
            - docker-v2-master-
            - docker-v2-
          paths:
            - /tmp/cache/docker.tar.gz
      - checkout
      - setup_remote_docker
      - run:
          name: Load Docker image layer cache
          command: |
            docker info
            set +o pipefail
            if [ -f /tmp/cache/docker.tar.gz ]; then
              pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
              docker images
            fi
      - run:
          name: Build Docker image
          no_output_timeout: 60m
          command: |
            docker build --cache-from jdkent/xnat_downloader \
            -t jdkent/xnat_downloader:latest \
            --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
            --build-arg VCS_REF=`git rev-parse --short HEAD` \
            --build-arg VERSION="${CIRCLE_TAG:-$THISVERSION}" .
      - run:
          name: Execute Docker image
          command: |
            docker run -ti --rm \
            jdkent/xnat_downloader:latest --help
      - run:
          name: Docker save
          command: |
            mkdir -p /tmp/cache
            docker save jdkent/xnat_downloader:latest \
            | pigz -8 -p 3 > /tmp/cache/docker.tar.gz
      - persist_to_workspace:
          root: /tmp
          paths:
            - cache/docker.tar.gz
            - src/xnat_downloader
  
  update_cache:
    machine:
        image: circleci/classic:201711-01
    working_directory: /tmp/src/xnat_downloader
    steps:
      - attach_workspace:
          at: /tmp
      - save_cache:
          key: docker-v2-{{ .Branch }}-{{ epoch }}
          paths:
            - /tmp/cache/docker.tar.gz
  
  test_bids:
      machine:
          image: circleci/classic:201711-01
      working_directory: /tmp/src/xnat_downloader
      steps:
        - checkout:
            path: /home/circleci/src/xnat_downloader
        - attach_workspace:
            at: /tmp
        - run:
            name: Load Docker image layer cache
            no_output_timeout: 30m
            command: |
              docker info
              set +o pipefail
              if [ -f /tmp/cache/docker.tar.gz ]; then
                sudo apt update && sudo apt -y install pigz
                pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
                docker images
              fi
        - run:
            name: Run Docker image on bids test data
            command: |
              docker run -ti \
              --entrypoint /bin/bash \
              jdkent/xnat_downloader:latest \
              bash -c "conda init && . /home/coder/.bashrc && . activate neuro && py.test /home/coder/project/xnat_downloader/tests/test_cli.py -k 'test_cli_bids'"

  test_non_bids:
    machine:
        image: circleci/classic:201711-01
    working_directory: /tmp/src/xnat_downloader
    steps:
      - checkout:
          path: /home/circleci/src/xnat_downloader
      - attach_workspace:
          at: /tmp
      - run:
          name: Load Docker image layer cache
          no_output_timeout: 30m
          command: |
            docker info
            set +o pipefail
            if [ -f /tmp/cache/docker.tar.gz ]; then
              sudo apt update && sudo apt -y install pigz
              pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
              docker images
            fi
      - run:
          name: Run Docker image on non-bids test data
          command: |
            docker run -ti --rm=false \
              --entrypoint /bin/bash \
              jdkent/xnat_downloader:latest \
              bash -c "conda init && . /home/coder/.bashrc && . activate neuro && py.test /home/coder/project/xnat_downloader/tests/test_cli.py -k 'test_cli_nonbids'"

  deploy:
    machine:
        image: circleci/classic:201711-01
    working_directory: /tmp/src/xnat_downloader
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Load Docker image layer cache
          no_output_timeout: 30m
          command: |
            docker info
            set +o pipefail
            if [ -f /tmp/cache/docker.tar.gz ]; then
              sudo apt update && sudo apt -y install pigz
              pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
              docker images
            fi
      - run: 
          name: deploy to docker
          no_output_timeout: 40m
          command: |
            if [[ -n "$DOCKER_PASS" ]]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker tag jdkent/xnat_downloader:latest jdkent/xnat_downloader:unstable
              docker push jdkent/xnat_downloader:unstable
              if [[ -n "${CIRCLE_TAG}" ]]; then
                docker tag jdkent/xnat_downloader jdkent/xnat_downloader:$CIRCLE_TAG
                docker push jdkent/xnat_downloader:$CIRCLE_TAG
              fi
            fi

  build_devel:
    docker:
      - image: docker:18.01.0-ce-git
    working_directory: /tmp/src/xnat_downloader
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: /tmp
      - run:
          name: Install pigz and python3
          command: |
            apk add --no-cache pigz python3
      - restore_cache:
          keys:
            - docker_devel-v1-{{ .Branch }}-{{ epoch }}
            - docker_devel-v1-{{ .Branch }}-
            - docker_devel-v1-master-
            - docker_devel-v1-
          paths:
            - /tmp/cache/docker_devel.tar.gz
      - run:
          name: Load Docker image layer cache
          command: |
            docker info
            set +o pipefail
            if [ -f /tmp/cache/docker.tar.gz ]; then
              pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
              docker tag jdkent/xnat_downloader:latest jdkent/xnat_downloader:unstable
              docker images
            fi

            if [ -f /tmp/cache/docker_devel.tar.gz ]; then
              pigz -d --stdout /tmp/cache/docker_devel.tar.gz | docker load
              docker images
            fi
      - run:
          name: Build Docker image
          no_output_timeout: 60m
          command: |
            docker build --cache-from jdkent/xnat_downloader:devel \
            -t jdkent/xnat_downloader:devel \
            -f Dockerfile_devel \
            --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
            --build-arg VCS_REF=`git rev-parse --short HEAD` \
            --build-arg VERSION="${CIRCLE_TAG:-$THISVERSION}" .
      - run:
          name: Docker save
          command: |
            mkdir -p /tmp/cache
            docker save jdkent/xnat_downloader:devel \
            | pigz -8 -p 3 > /tmp/cache/docker_devel.tar.gz
      - persist_to_workspace:
          root: /tmp
          paths:
            - cache/docker_devel.tar.gz
  
  update_devel_cache:
    machine:
        image: circleci/classic:201711-01
    steps:
      - attach_workspace:
          at: /tmp
      - save_cache:
          key: docker_devel-v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /tmp/cache/docker_devel.tar.gz

  deploy_devel:
    machine:
        image: circleci/classic:201711-01
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Load Docker image layer cache
          no_output_timeout: 30m
          command: |
            docker info
            set +o pipefail
            if [ -f /tmp/cache/docker_devel.tar.gz ]; then
              sudo apt update && sudo apt -y install pigz
              pigz -d --stdout /tmp/cache/docker_devel.tar.gz | docker load
              docker images
            fi
      - run: 
          name: deploy to docker
          no_output_timeout: 40m
          command: |
            if [[ -n "$DOCKER_PASS" ]]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker push jdkent/xnat_downloader:devel
            fi

# run jobs in workflows
workflows:
    version: 2
    build_test_deploy:
      jobs:
        - build:
            filters:
              tags:
                only: /.*/

        - update_cache:
            requires:
              - build
            filters:
              branches:
                ignore: /docs?\/.*/
              tags:
                only: /.*/

        - test_bids:
            requires:
              - build
            filters:
              branches:
                ignore: /docs?\/.*/
              tags:
                only: /.*/
        
        - test_non_bids:
            requires:
              - build
            filters:
              branches:
                ignore: /docs?\/.*/
              tags:
                only: /.*/

        - deploy:
            requires:
              - build
              - test_non_bids
              - test_bids
            filters:
              branches:
                only: master
              tags:
                only: /.*/

        - build_devel:
            requires:
              - build
            filters:
              branches:
                only:
                  - master
                  - /.*devel.*/

        - update_devel_cache:
            requires:
              - build_devel
            filters:
              branches:
                only:
                  - master
                  - /.*devel.*/
        
        - deploy_devel:
            requires:
              - update_devel_cache
            filters:
              branches:
                only:
                  - master
